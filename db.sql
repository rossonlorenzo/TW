-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;

DROP TABLE IF EXISTS utenti CASCADE;
DROP TABLE IF EXISTS aziende CASCADE;

CREATE TABLE IF NOT EXISTS public.utenti
(
    id serial NOT NULL,
    mail character varying(20) NOT NULL,
    password character varying(60)[] NOT NULL,
    cv_path character varying(90) NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.aziende
(
    id serial NOT NULL,
    mail character varying(20) NOT NULL,
    password character varying(60)[] NOT NULL,
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.offerte
(
    id serial NOT NULL,
    titolo character varying(20) NOT NULL,
    "desc" character varying(300) NOT NULL,
    titoli_r character varying(90) NOT NULL,
    paga_m money NOT NULL,
    offerta_id serial NOT NULL,
    PRIMARY KEY (id),
	FOREIGN KEY (offerta_id)
    REFERENCES public.aziende (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS public.preferiti
(
    utenti_id serial NOT NULL,
    offerte_id serial NOT NULL,
    PRIMARY KEY (utenti_id, offerte_id),
	FOREIGN KEY (utenti_id)
    REFERENCES utenti (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE,
	FOREIGN KEY (offerte_id)
    REFERENCES offerte (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS public.candidate
(
    utenti_id serial NOT NULL,
    offerte_id serial NOT NULL,
    scadenza timestamp without time zone NOT NULL,
    PRIMARY KEY (utenti_id, offerte_id),
	FOREIGN KEY (offerte_id)
    REFERENCES offerte (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE,
	FOREIGN KEY (utenti_id)
    REFERENCES public.utenti (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS public.valutazioni
(
    utenti_id serial NOT NULL,
    offerte_id serial NOT NULL,
    commento character varying(300),
    voto integer NOT NULL CHECK (voto > 0 AND voto <=5),
    PRIMARY KEY (offerte_id, utenti_id),
	FOREIGN KEY (utenti_id)
    REFERENCES utenti (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE,
	FOREIGN KEY (offerte_id)
    REFERENCES offerte (id) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE
);


END;